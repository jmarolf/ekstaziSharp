//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EkstaziSharp.Tester {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EkstaziSharp.Tester.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;RemoteRepository&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;MSBuild14&quot;,
        ///  &quot;DependencyManagerType&quot;: &quot;Nuget&quot;,
        ///  &quot;RepositoryURL&quot;: &quot;https://github.com/sjdirect/abot.git&quot;,
        ///  &quot;SolutionPath&quot;: &quot;Abot.sln&quot;,
        ///  &quot;Commits&quot;: [
        ///    &quot;c07b71af89dfa1c9a8f58c38eebef01d03af6c98&quot;,
        ///    &quot;156e291afe0f0e80ee6d55adde3b74d8ac894305&quot;,
        ///    &quot;fad6481d22d34c7a6bf6102cadc164d59c7597a5&quot;,
        ///    &quot;7c0ef52112874f873a54387e38024cc264003053&quot;,
        ///    &quot;6881ad42129831868edb9ad00766d0b6093786ea&quot;,
        ///    &quot;d0e55962dc51d85f85ec73362e925958a29c19c7&quot;,
        ///    &quot;70a51 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Abot {
            get {
                return ResourceManager.GetString("Abot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;RemoteRepository&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;MSBuild14&quot;,
        ///  &quot;DependencyManagerType&quot;: &quot;Nuget&quot;,
        ///  &quot;RepositoryURL&quot;: &quot;https://github.com/sjdirect/abot.git&quot;,
        ///  &quot;SolutionPath&quot;: &quot;Abot.sln&quot;,
        ///  &quot;Commits&quot;: [
        ///    &quot;c07b71af89dfa1c9a8f58c38eebef01d03af6c98&quot;,
        ///    &quot;156e291afe0f0e80ee6d55adde3b74d8ac894305&quot;,
        ///    &quot;fad6481d22d34c7a6bf6102cadc164d59c7597a5&quot;,
        ///    &quot;7c0ef52112874f873a54387e38024cc264003053&quot;,
        ///    &quot;6881ad42129831868edb9ad00766d0b6093786ea&quot;,
        ///    &quot;d0e55962dc51d85f85ec73362e925958a29c19c7&quot;,
        ///    &quot;70a51 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AbotUnit {
            get {
                return ResourceManager.GetString("AbotUnit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;RemoteRepository&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;MSBuild14&quot;,
        ///  &quot;DependencyManagerType&quot;: &quot;Nuget&quot;,
        ///  &quot;RepositoryURL&quot;: &quot;https://github.com/sjdirect/abot.git&quot;,
        ///  &quot;SolutionPath&quot;: &quot;Abot.sln&quot;,
        ///  &quot;Commits&quot;: [
        ///    &quot;c07b71af89dfa1c9a8f58c38eebef01d03af6c98&quot;,
        ///    &quot;156e291afe0f0e80ee6d55adde3b74d8ac894305&quot;,
        ///    &quot;fad6481d22d34c7a6bf6102cadc164d59c7597a5&quot;,
        ///    &quot;7c0ef52112874f873a54387e38024cc264003053&quot;,
        ///    &quot;6881ad42129831868edb9ad00766d0b6093786ea&quot;,
        ///    &quot;d0e55962dc51d85f85ec73362e925958a29c19c7&quot;,
        ///    &quot;70a51 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AbotUnitNoInstrumentation {
            get {
                return ResourceManager.GetString("AbotUnitNoInstrumentation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;RemoteRepository&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;MSBuild14&quot;,
        ///  &quot;DependencyManagerType&quot;: &quot;Nuget&quot;,
        ///  &quot;RepositoryURL&quot;: &quot;https://github.com/davideicardi/DynamicExpresso.git&quot;,
        ///  &quot;SolutionPath&quot;: &quot;DynamicExpresso.sln&quot;,
        ///  &quot;Commits&quot;: [
        ///    &quot;186219674dae44278b9ed6c662400fbdbeb65951&quot;,
        ///    &quot;fedbb87667c3007e3a2e5b5709b48309de493c03&quot;,
        ///    &quot;5295d97476eb9593ff371264db6a661a768db4e7&quot;,
        ///    &quot;4e341850f620ce5b60d09dd18777db8418f7c27b&quot;,
        ///    &quot;2adcca59ce5ba1fd1e1a931bc2bb9c11d2ee0036&quot;,
        ///    &quot;7cd6bb9eba6e630c778d6e17a91 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DynamicExpresso {
            get {
                return ResourceManager.GetString("DynamicExpresso", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;RemoteRepository&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;MSBuild14&quot;,
        ///  &quot;DependencyManagerType&quot;: &quot;Nuget&quot;,
        ///  &quot;RepositoryURL&quot;: &quot;https://github.com/davideicardi/DynamicExpresso.git&quot;,
        ///  &quot;SolutionPath&quot;: &quot;DynamicExpresso.sln&quot;,
        ///  &quot;Commits&quot;: [
        ///    &quot;186219674dae44278b9ed6c662400fbdbeb65951&quot;,
        ///    &quot;fedbb87667c3007e3a2e5b5709b48309de493c03&quot;,
        ///    &quot;5295d97476eb9593ff371264db6a661a768db4e7&quot;,
        ///    &quot;4e341850f620ce5b60d09dd18777db8418f7c27b&quot;,
        ///    &quot;2adcca59ce5ba1fd1e1a931bc2bb9c11d2ee0036&quot;,
        ///    &quot;7cd6bb9eba6e630c778d6e17a91 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DynamicExpressoNoInstrumentation {
            get {
                return ResourceManager.GetString("DynamicExpressoNoInstrumentation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;RemoteRepository&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;MSBuild12&quot;,
        ///  &quot;DependencyManagerType&quot;: &quot;Nuget&quot;,
        ///  &quot;RepositoryURL&quot;: &quot;https://github.com/fclp/fluent-command-line-parser.git&quot;,
        ///  &quot;SolutionPath&quot;: &quot;FluentCommandLineParser.sln&quot;,
        ///  &quot;Commits&quot;: [
        ///    &quot;d8eade0f3655bdbacd083874cf4d3a3b4f192ee5&quot;,
        ///    &quot;05dcef89e24b48e4863ff5617b260863e2b07185&quot;,
        ///    &quot;3673a1d0c35d172f3e24a938bacc2e375df084e0&quot;,
        ///    &quot;3aaa7eafc985f3946ed70b2ce0b2c57b135041e8&quot;,
        ///    &quot;057e269b5c9c17fbe129ad5575b2826d006a6d80&quot;,
        ///    &quot;fb11875a5409837c [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FluentCommandLineParser {
            get {
                return ResourceManager.GetString("FluentCommandLineParser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;RemoteRepository&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;MSBuild12&quot;,
        ///  &quot;DependencyManagerType&quot;: &quot;Nuget&quot;,
        ///  &quot;RepositoryURL&quot;: &quot;https://github.com/fclp/fluent-command-line-parser.git&quot;,
        ///  &quot;SolutionPath&quot;: &quot;FluentCommandLineParser.sln&quot;,
        ///  &quot;Commits&quot;: [
        ///    &quot;d8eade0f3655bdbacd083874cf4d3a3b4f192ee5&quot;,
        ///    &quot;05dcef89e24b48e4863ff5617b260863e2b07185&quot;,
        ///    &quot;3673a1d0c35d172f3e24a938bacc2e375df084e0&quot;,
        ///    &quot;3aaa7eafc985f3946ed70b2ce0b2c57b135041e8&quot;,
        ///    &quot;057e269b5c9c17fbe129ad5575b2826d006a6d80&quot;,
        ///    &quot;fb11875a5409837c [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FluentCommandLineParserNoInstrumentation {
            get {
                return ResourceManager.GetString("FluentCommandLineParserNoInstrumentation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;RemoteRepository&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;MSBuild14&quot;,
        ///  &quot;DependencyManagerType&quot;: &quot;Dotnet&quot;,
        ///  &quot;RepositoryURL&quot;: &quot;https://github.com/JeremySkinner/FluentValidation.git&quot;,
        ///  &quot;SolutionPath&quot;: &quot;FluentValidation.sln&quot;,
        ///  &quot;ProjectFilePath&quot;: &quot;src\\FluentValidation.Tests\\FluentValidation.Tests.csproj&quot;,
        ///  &quot;Commits&quot;: [
        ///    &quot;445f6390f31b4851efb274cef6bddac184c873f7&quot;,
        ///    &quot;cf8c5e891e25925f48072a236a3a8bd858aea397&quot;,
        ///    &quot;0e07deaf94a3d49b510e44a8be0c6a486f3136c4&quot;,
        ///    &quot;f95bf0c64500b0702c280fe767908bdc22a3 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FluentValidation {
            get {
                return ResourceManager.GetString("FluentValidation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;RemoteRepository&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;MSBuild14&quot;,
        ///  &quot;DependencyManagerType&quot;: &quot;Dotnet&quot;,
        ///  &quot;RepositoryURL&quot;: &quot;https://github.com/JeremySkinner/FluentValidation.git&quot;,
        ///  &quot;SolutionPath&quot;: &quot;FluentValidation.sln&quot;,
        ///  &quot;ProjectFilePath&quot;: &quot;src\\FluentValidation.Tests\\FluentValidation.Tests.csproj&quot;,
        ///  &quot;Commits&quot;: [
        ///    &quot;445f6390f31b4851efb274cef6bddac184c873f7&quot;,
        ///    &quot;cf8c5e891e25925f48072a236a3a8bd858aea397&quot;,
        ///    &quot;0e07deaf94a3d49b510e44a8be0c6a486f3136c4&quot;,
        ///    &quot;f95bf0c64500b0702c280fe767908bdc22a3 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FluentValidationNoInstrumentation {
            get {
                return ResourceManager.GetString("FluentValidationNoInstrumentation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;RemoteRepository&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;Script&quot;,
        ///  &quot;BuildScriptPath&quot;: &quot;C:\\Users\\vasic\\buildFunScript.cmd&quot;,
        ///  &quot;RepositoryURL&quot;: &quot;https://github.com/ZachBray/FunScript.git&quot;,
        ///  &quot;SolutionPath&quot;: &quot;FunScript.sln&quot;,
        ///  &quot;Commits&quot;: [
        ///    &quot;823df8386317c67a053f890f833569c3da2ad0f3&quot;
        ///  ],
        ///  &quot;ProgramModules&quot;: [
        ///    &quot;tests\\FunScript.Tests\\bin\\Debug\\FunScript.dll&quot;,
        ///    &quot;tests\\FunScript.Tests\\bin\\Debug\\FunScript.Rx.dll&quot;,
        ///    &quot;tests\\FunScript.Tests\\bin\\Debug\\FunScript.Interop.dll&quot;,
        ///  ],
        ///  &quot;Te [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FunScript {
            get {
                return ResourceManager.GetString("FunScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;RemoteRepository&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;MSBuild14&quot;,
        ///  &quot;DependencyManagerType&quot;: &quot;Nuget&quot;,
        ///  &quot;RepositoryURL&quot;: &quot;https://github.com/jsonfx/jsonfx.git&quot;,
        ///  &quot;SolutionPath&quot;: &quot;JsonFx.sln&quot;,
        ///  &quot;Commits&quot;: [
        ///    &quot;1c72c653a2c93b9733e1505417b8ff20ab483b68&quot;,
        ///    &quot;b4f351deefeb03ca32a987f07a99960a239d245f&quot;,
        ///    &quot;6dd3fa025683936fe6e1e9d33802400f5b58a41b&quot;,
        ///    &quot;a219279b079868bd3bfd17cb4b8aac04c93bdf1e&quot;,
        ///    &quot;ac8c113d061d147abfbcf5242a9dddf04a341cb4&quot;,
        ///    &quot;73521fd042004c21b7b297ac5060f4fa91e7cf7c&quot;,
        ///    &quot;6b6 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string JsonFx {
            get {
                return ResourceManager.GetString("JsonFx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;RemoteRepository&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;MSBuild14&quot;,
        ///  &quot;DependencyManagerType&quot;: &quot;Nuget&quot;,
        ///  &quot;RepositoryURL&quot;: &quot;https://github.com/jsonfx/jsonfx.git&quot;,
        ///  &quot;SolutionPath&quot;: &quot;JsonFx.sln&quot;,
        ///  &quot;Commits&quot;: [
        ///    &quot;1c72c653a2c93b9733e1505417b8ff20ab483b68&quot;,
        ///    &quot;b4f351deefeb03ca32a987f07a99960a239d245f&quot;,
        ///    &quot;6dd3fa025683936fe6e1e9d33802400f5b58a41b&quot;,
        ///    &quot;a219279b079868bd3bfd17cb4b8aac04c93bdf1e&quot;,
        ///    &quot;ac8c113d061d147abfbcf5242a9dddf04a341cb4&quot;,
        ///    &quot;73521fd042004c21b7b297ac5060f4fa91e7cf7c&quot;,
        ///    &quot;6b6 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string JsonFxNoInstrumentation {
            get {
                return ResourceManager.GetString("JsonFxNoInstrumentation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;RemoteRepository&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;MSBuild14&quot;,
        ///  &quot;DependencyManagerType&quot;: &quot;Nuget&quot;,
        ///  &quot;RepositoryURL&quot;: &quot;https://github.com/adamcaudill/libsodium-net.git&quot;,
        ///  &quot;SolutionPath&quot;: &quot;libsodium-net.sln&quot;,
        ///  &quot;Commits&quot;: [
        ///    &quot;bcdc586d59f191495090d612cb44a42f4e3dabaf&quot;,
        ///    &quot;a55468ae8de4ac766b4c221520047dd686f27524&quot;,
        ///    &quot;50a2abb64e658bdc43bc5f54c4d84cb2aacc963a&quot;,
        ///    &quot;3495816a9531c29c7b769579acf9203d55d698ae&quot;,
        ///    &quot;e4348ba10304c4568299117c133a0de72dd9e5e4&quot;,
        ///    &quot;b7e3ed8fd8e393d1a83f4bf0ea6ec15f [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LibSodium {
            get {
                return ResourceManager.GetString("LibSodium", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;RemoteRepository&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;MSBuild14&quot;,
        ///  &quot;DependencyManagerType&quot;: &quot;Nuget&quot;,
        ///  &quot;RepositoryURL&quot;: &quot;https://github.com/adamcaudill/libsodium-net.git&quot;,
        ///  &quot;SolutionPath&quot;: &quot;libsodium-net.sln&quot;,
        ///  &quot;Commits&quot;: [
        ///    &quot;bcdc586d59f191495090d612cb44a42f4e3dabaf&quot;,
        ///    &quot;a55468ae8de4ac766b4c221520047dd686f27524&quot;,
        ///    &quot;50a2abb64e658bdc43bc5f54c4d84cb2aacc963a&quot;,
        ///    &quot;3495816a9531c29c7b769579acf9203d55d698ae&quot;,
        ///    &quot;e4348ba10304c4568299117c133a0de72dd9e5e4&quot;,
        ///    &quot;b7e3ed8fd8e393d1a83f4bf0ea6ec15f [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LibSodiumNoInstrumentation {
            get {
                return ResourceManager.GetString("LibSodiumNoInstrumentation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;LocalProject&quot;,
        ///  &quot;ProjectPath&quot;: &quot;C:\\Users\\vasic\\.ekstaziSharp\\repositories\\https_github.com_JeremySkinner_FluentValidation&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;Script&quot;,
        ///  &quot;BuildScriptPath&quot;: &quot;C:\\Users\\vasic\\.ekstaziSharp\\repositories\\https_github.com_JeremySkinner_FluentValidation\\mine.cmd&quot;,
        ///  &quot;ProgramModules&quot;: [&quot;src\\FluentValidation.Tests\\bin\\Debug\\FluentValidation.dll&quot;],
        ///  &quot;TestModules&quot;: [&quot;src\\FluentValidation.Tests\\bin\\Debug\\FluentValidation.Tests.dll&quot;],
        ///  &quot;TestingFramework&quot;: &quot;X [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Local {
            get {
                return ResourceManager.GetString("Local", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;LocalProject&quot;,
        ///  &quot;ProjectPath&quot;: &quot;C:\\Users\\vasic\\.ekstaziSharp\\repositories\\https_github.com_JeremySkinner_FluentValidation&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;Script&quot;,
        ///  &quot;BuildScriptPath&quot;: &quot;C:\\Users\\vasic\\.ekstaziSharp\\repositories\\https_github.com_JeremySkinner_FluentValidation\\mine.cmd&quot;,
        ///  &quot;ProgramModules&quot;: [&quot;src\\FluentValidation.Tests\\bin\\Debug\\FluentValidation.dll&quot;],
        ///  &quot;TestModules&quot;: [&quot;src\\FluentValidation.Tests\\bin\\Debug\\FluentValidation.Tests.dll&quot;],
        ///  &quot;TestingFramework&quot;: &quot;X [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Local1 {
            get {
                return ResourceManager.GetString("Local1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;log4net&gt;
        ///  &lt;root&gt;
        ///    &lt;!-- Specify the logging level you want --&gt;
        ///    &lt;level value=&quot;ALL&quot; /&gt;
        ///    &lt;!-- Specify the appender you want to use --&gt;
        ///    &lt;appender-ref ref=&quot;ConsoleAppender&quot; /&gt;
        ///  &lt;/root&gt;
        ///  &lt;appender name=&quot;ConsoleAppender&quot; type=&quot;log4net.Appender.ConsoleAppender&quot;&gt;
        ///    &lt;layout type=&quot;log4net.Layout.PatternLayout&quot;&gt;
        ///      &lt;conversionPattern value=&quot;%date %level %logger - %message%newline&quot; /&gt;
        ///    &lt;/layout&gt;
        ///    &lt;filter type=&quot;log4net.Filter.LevelRangeFilter&quot;&gt;
        ///      &lt;levelMin value=&quot;INFO&quot; /&gt;
        ///      &lt;levelMax v [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string log4net {
            get {
                return ResourceManager.GetString("log4net", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;log4net&gt;
        ///  &lt;root&gt;
        ///    &lt;!-- Specify the logging level you want --&gt;
        ///    &lt;level value=&quot;ALL&quot; /&gt;
        ///    &lt;!-- Specify the appender you want to use --&gt;
        ///    &lt;appender-ref ref=&quot;ConsoleAppender&quot; /&gt;
        ///    &lt;appender-ref ref=&quot;FileAppender&quot; /&gt;
        ///  &lt;/root&gt;
        ///  &lt;appender name=&quot;ConsoleAppender&quot; type=&quot;log4net.Appender.ConsoleAppender&quot;&gt;
        ///    &lt;layout type=&quot;log4net.Layout.PatternLayout&quot;&gt;
        ///      &lt;conversionPattern value=&quot;%date %level %logger - %message%newline&quot; /&gt;
        ///    &lt;/layout&gt;
        ///    &lt;filter type=&quot;log4net.Filter.LevelRangeFilter&quot;&gt;
        ///      &lt;le [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string log4net_debug {
            get {
                return ResourceManager.GetString("log4net_debug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;RemoteRepository&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;MSBuild14&quot;,
        ///  &quot;DependencyManagerType&quot;: &quot;Dotnet&quot;,
        ///  &quot;RepositoryURL&quot;: &quot;https://github.com/morelinq/MoreLINQ.git&quot;,
        ///  &quot;SolutionPath&quot;: &quot;MoreLinq.sln&quot;,
        ///  &quot;Commits&quot;: [
        ///    &quot;d987f0ef30390a9b66d5cc608e5e39648d26097a&quot;,
        ///    &quot;1380e25baf178c11fd7a8d4fc69a307b6bcd4fc4&quot;,
        ///    &quot;2d2c8d09cade4dc1cf991967bc23bc18c2e80a94&quot;,
        ///    &quot;ada35a542d975747ac8be4e37a019595ba6f4190&quot;,
        ///    &quot;d39873278b87d753dcb77e0a9e7d8036dfa108d8&quot;,
        ///    &quot;5d36a81c9b6be0f625d9511d58a72d8f302b8f27&quot;,
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MoreLinq {
            get {
                return ResourceManager.GetString("MoreLinq", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;RemoteRepository&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;MSBuild14&quot;,
        ///  &quot;DependencyManagerType&quot;: &quot;Dotnet&quot;,
        ///  &quot;RepositoryURL&quot;: &quot;https://github.com/morelinq/MoreLINQ.git&quot;,
        ///  &quot;SolutionPath&quot;: &quot;MoreLinq.sln&quot;,
        ///  &quot;Commits&quot;: [
        ///    &quot;d987f0ef30390a9b66d5cc608e5e39648d26097a&quot;,
        ///    &quot;1380e25baf178c11fd7a8d4fc69a307b6bcd4fc4&quot;,
        ///    &quot;2d2c8d09cade4dc1cf991967bc23bc18c2e80a94&quot;,
        ///    &quot;ada35a542d975747ac8be4e37a019595ba6f4190&quot;,
        ///    &quot;d39873278b87d753dcb77e0a9e7d8036dfa108d8&quot;,
        ///    &quot;5d36a81c9b6be0f625d9511d58a72d8f302b8f27&quot;,
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MoreLinqNoInstrumentation {
            get {
                return ResourceManager.GetString("MoreLinqNoInstrumentation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;RemoteRepository&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;MSBuild14&quot;,
        ///  &quot;DependencyManagerType&quot;: &quot;Dotnet&quot;,
        ///  &quot;RepositoryURL&quot;: &quot;https://github.com/NancyFx/Nancy.git&quot;,
        ///  &quot;SolutionPath&quot;: &quot;Nancy.sln&quot;,
        ///  &quot;ProjectFilePath&quot;: &quot;test\\Nancy.Tests\\Nancy.Tests.xproj&quot;,
        ///  &quot;Commits&quot;: [
        ///    &quot;ef567c2930c7ff642a5c811810948df8dd3c7e25&quot;,
        ///    &quot;1193188673353f0bf7ab4a11f08ad4f6871b02e6&quot;,
        ///    &quot;ee02002072edaa890f633fbe8b5fd3b651443548&quot;,
        ///    &quot;5e3efbc5d3bd216218e52c69146a172615ebac37&quot;,
        ///    &quot;88f985fb70756b51ff305727121a32fdc04f4a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Nancy {
            get {
                return ResourceManager.GetString("Nancy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;RemoteRepository&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;MSBuild14&quot;,
        ///  &quot;DependencyManagerType&quot;: &quot;Nuget&quot;,
        ///  &quot;RepositoryURL&quot;: &quot;https://github.com/JamesNK/Newtonsoft.Json&quot;,
        ///  &quot;SolutionPath&quot;: &quot;Src\\Newtonsoft.Json.Net40.sln&quot;,
        ///  &quot;Commits&quot;: [
        ///    &quot;218c25c859536613258fa2fd41c4209719ad75ea&quot;,
        ///    &quot;260dfedac53c30a3b9b6b372d622f679ebdb7535&quot;,
        ///    &quot;0b187df8cb1b00f246d048d4502bc3147607be2f&quot;,
        ///    &quot;f663060005b2ad24b8190c223e6ea8faab07515f&quot;,
        ///    &quot;211b3b0db26fc4beb0c057fd00361a6c1e784c35&quot;,
        ///    &quot;5bd69fe8be120b01a057fbfff [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NewtonsoftJson {
            get {
                return ResourceManager.GetString("NewtonsoftJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;RemoteRepository&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;MSBuild14&quot;,
        ///  &quot;DependencyManagerType&quot;: &quot;Nuget&quot;,
        ///  &quot;RepositoryURL&quot;: &quot;https://github.com/JamesNK/Newtonsoft.Json&quot;,
        ///  &quot;SolutionPath&quot;: &quot;Src\\Newtonsoft.Json.Net40.sln&quot;,
        ///  &quot;Commits&quot;: [
        ///    &quot;218c25c859536613258fa2fd41c4209719ad75ea&quot;,
        ///    &quot;260dfedac53c30a3b9b6b372d622f679ebdb7535&quot;,
        ///    &quot;0b187df8cb1b00f246d048d4502bc3147607be2f&quot;,
        ///    &quot;f663060005b2ad24b8190c223e6ea8faab07515f&quot;,
        ///    &quot;211b3b0db26fc4beb0c057fd00361a6c1e784c35&quot;,
        ///    &quot;5bd69fe8be120b01a057fbfff [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NewtonsoftJsonNoInstrumentation {
            get {
                return ResourceManager.GetString("NewtonsoftJsonNoInstrumentation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;RemoteRepository&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;MSBuild14&quot;,
        ///  &quot;DependencyManagerType&quot;: &quot;Nuget&quot;,
        ///  &quot;RepositoryURL&quot;: &quot;https://github.com/OptiKey/OptiKey.git&quot;,
        ///  &quot;SolutionPath&quot;: &quot;OptiKey.sln&quot;,
        ///  &quot;Commits&quot;: [
        ///    &quot;84ea4049a4c2c9ae0aa8ebddf21cdee67eeb0898&quot;,
        ///    &quot;cf693a1a4956786672b98704edd318d729d5e667&quot;,
        ///    &quot;cb4d26f40db5e7f3243c29e3d2c25779c4670e57&quot;,
        ///    &quot;d98da0769030ffcda2f634ae1534c3df7b930286&quot;,
        ///    &quot;1a49a4349060f584630786ea19a1b16c98cd5ade&quot;,
        ///    &quot;2b83541ba765f2169b4cf0a9b3678291710d6aeb&quot;,
        ///    &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string OptiKey {
            get {
                return ResourceManager.GetString("OptiKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;RemoteRepository&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;MSBuild14&quot;,
        ///  &quot;DependencyManagerType&quot;: &quot;Nuget&quot;,
        ///  &quot;RepositoryURL&quot;: &quot;https://github.com/OptiKey/OptiKey.git&quot;,
        ///  &quot;SolutionPath&quot;: &quot;OptiKey.sln&quot;,
        ///  &quot;Commits&quot;: [
        ///    &quot;84ea4049a4c2c9ae0aa8ebddf21cdee67eeb0898&quot;,
        ///    &quot;cf693a1a4956786672b98704edd318d729d5e667&quot;,
        ///    &quot;cb4d26f40db5e7f3243c29e3d2c25779c4670e57&quot;,
        ///    &quot;d98da0769030ffcda2f634ae1534c3df7b930286&quot;,
        ///    &quot;1a49a4349060f584630786ea19a1b16c98cd5ade&quot;,
        ///    &quot;2b83541ba765f2169b4cf0a9b3678291710d6aeb&quot;,
        ///    &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string OptiKeyNoInstrumentation {
            get {
                return ResourceManager.GetString("OptiKeyNoInstrumentation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;RemoteRepository&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;MSBuild14&quot;,
        ///  &quot;DependencyManagerType&quot;: &quot;Nuget&quot;,
        ///  &quot;RepositoryURL&quot;: &quot;https://github.com/fsprojects/ProjectScaffold.git&quot;,
        ///  &quot;SolutionPath&quot;: &quot;FSharp.ProjectScaffold.sln&quot;,
        ///  &quot;Commits&quot;: [
        ///    &quot;d44f890c900351faeb106c74c07000cf9dd18ff8&quot;
        ///  ],
        ///  &quot;ProgramModules&quot;: [
        ///    &quot;tests\\FSharp.ProjectTemplate.Tests\\bin\\Debug\\FSharp.ProjectTemplate.dll&quot;
        ///  ],
        ///  &quot;TestModules&quot;: [&quot;tests\\FSharp.ProjectTemplate.Tests\\bin\\Debug\\FSharp.ProjectTemplate.Tests.dll&quot;],
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ProjectScaffold {
            get {
                return ResourceManager.GetString("ProjectScaffold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;RemoteRepository&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;MSBuild14&quot;,
        ///  &quot;DependencyManagerType&quot;: &quot;Nuget&quot;,
        ///  &quot;RepositoryURL&quot;: &quot;https://github.com/mwrock/RequestReduce.git&quot;,
        ///  &quot;SolutionPath&quot;: &quot;RequestReduce.sln&quot;,
        ///  &quot;Commits&quot;: [
        ///    &quot;ddd623b5ee7a4cdcff0505da8c1baea1eb2f778f&quot;,
        ///    &quot;2d6fec822ff0a16ac155047bc475048e513d439d&quot;,
        ///    &quot;fe4f794336e7d347afcf92ab02557750157f198d&quot;,
        ///    &quot;817fe7eee1dbe94b5b1f920abc3f63c5e0fb9efc&quot;,
        ///    &quot;35378a1a07e6bdd1914eb41b0519f26f71d367ae&quot;,
        ///    &quot;f7dbd14c4c0b24d8a837eb7f58daaf2485836 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RequestReduce {
            get {
                return ResourceManager.GetString("RequestReduce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;RemoteRepository&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;MSBuild14&quot;,
        ///  &quot;DependencyManagerType&quot;: &quot;Nuget&quot;,
        ///  &quot;RepositoryURL&quot;: &quot;https://github.com/mwrock/RequestReduce.git&quot;,
        ///  &quot;SolutionPath&quot;: &quot;RequestReduce.sln&quot;,
        ///  &quot;Commits&quot;: [
        ///    &quot;ddd623b5ee7a4cdcff0505da8c1baea1eb2f778f&quot;,
        ///    &quot;2d6fec822ff0a16ac155047bc475048e513d439d&quot;,
        ///    &quot;fe4f794336e7d347afcf92ab02557750157f198d&quot;,
        ///    &quot;817fe7eee1dbe94b5b1f920abc3f63c5e0fb9efc&quot;,
        ///    &quot;35378a1a07e6bdd1914eb41b0519f26f71d367ae&quot;,
        ///    &quot;f7dbd14c4c0b24d8a837eb7f58daaf2485836 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RequestReduceIntegration {
            get {
                return ResourceManager.GetString("RequestReduceIntegration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;RemoteRepository&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;MSBuild14&quot;,
        ///  &quot;DependencyManagerType&quot;: &quot;Nuget&quot;,
        ///  &quot;RepositoryURL&quot;: &quot;https://github.com/mwrock/RequestReduce.git&quot;,
        ///  &quot;SolutionPath&quot;: &quot;RequestReduce.sln&quot;,
        ///  &quot;Commits&quot;: [
        ///    &quot;ddd623b5ee7a4cdcff0505da8c1baea1eb2f778f&quot;,
        ///    &quot;2d6fec822ff0a16ac155047bc475048e513d439d&quot;,
        ///    &quot;fe4f794336e7d347afcf92ab02557750157f198d&quot;,
        ///    &quot;817fe7eee1dbe94b5b1f920abc3f63c5e0fb9efc&quot;,
        ///    &quot;35378a1a07e6bdd1914eb41b0519f26f71d367ae&quot;,
        ///    &quot;f7dbd14c4c0b24d8a837eb7f58daaf2485836 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RequestReduceNoInstrumentation {
            get {
                return ResourceManager.GetString("RequestReduceNoInstrumentation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;RemoteRepository&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;MSBuild14&quot;,
        ///  &quot;DependencyManagerType&quot;: &quot;Dotnet&quot;,
        ///  &quot;RepositoryURL&quot;: &quot;https://github.com/dotnet-state-machine/stateless.git&quot;,
        ///  &quot;SolutionPath&quot;: &quot;Stateless.sln&quot;,
        ///  &quot;Commits&quot;: [
        ///    &quot;7c03035f10810c3580533cb86d04eb3caef4e6a8&quot;,
        ///    &quot;bcd509bb005fd0555791a5511246dad3ecf849d5&quot;,
        ///    &quot;f2cc7416beb4e47c9b907350cbbd2a07c1544491&quot;,
        ///    &quot;1cc9c44d960033069300b71459f506c1d7a43178&quot;,
        ///    &quot;af8a467a1add68daeb2abc43a35c21b5968fffb7&quot;,
        ///    &quot;c09c904c179ca259f17124af8288a2 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Stateless {
            get {
                return ResourceManager.GetString("Stateless", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TestSource&quot;: &quot;RemoteRepository&quot;,
        ///  &quot;BuildStrategyType&quot;: &quot;MSBuild14&quot;,
        ///  &quot;DependencyManagerType&quot;: &quot;Dotnet&quot;,
        ///  &quot;RepositoryURL&quot;: &quot;https://github.com/dotnet-state-machine/stateless.git&quot;,
        ///  &quot;SolutionPath&quot;: &quot;Stateless.sln&quot;,
        ///  &quot;Commits&quot;: [
        ///    &quot;7c03035f10810c3580533cb86d04eb3caef4e6a8&quot;,
        ///    &quot;bcd509bb005fd0555791a5511246dad3ecf849d5&quot;,
        ///    &quot;f2cc7416beb4e47c9b907350cbbd2a07c1544491&quot;,
        ///    &quot;1cc9c44d960033069300b71459f506c1d7a43178&quot;,
        ///    &quot;af8a467a1add68daeb2abc43a35c21b5968fffb7&quot;,
        ///    &quot;c09c904c179ca259f17124af8288a2 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StatelessNoInstrumentation {
            get {
                return ResourceManager.GetString("StatelessNoInstrumentation", resourceCulture);
            }
        }
    }
}
